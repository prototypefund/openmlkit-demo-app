plugins {
    id 'com.android.application' version '7.1.2' apply false
    id 'com.android.library' version '7.1.2' apply false
    id 'org.jetbrains.kotlin.android' version '1.6.10' apply false
    id 'maven-publish'
    id 'org.jlleitschuh.gradle.ktlint' version '10.3.0'
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

publishing {
    publications {
        library(MavenPublication) {
            groupId "io.krasch"
            artifactId "openread"
            version "0.0.2"
            artifact "openread/build/outputs/aar/openread-release.aar"

            pom.withXml {
                def dependencies = asNode().appendNode('dependencies')

                def dependency = dependencies.appendNode('dependency')
                dependency.appendNode('groupId', 'org.tensorflow')
                dependency.appendNode('artifactId', 'tensorflow-lite')
                dependency.appendNode('version', '2.8.0')

                /*configurations.getByName("compileClasspath").getResolvedConfiguration().getFirstLevelModuleDependencies().each {
                    def dependency = dependencies.appendNode('dependency')
                    dependency.appendNode('groupId', it.moduleGroup)
                    dependency.appendNode('artifactId', it.moduleName)
                    dependency.appendNode('version', it.moduleVersion)
                }*/
            }
        }
    }
    repositories {
        maven {
            url "https://gitlab.com/api/v4/projects/38250497/packages/maven"
            credentials(HttpHeaderCredentials) {
                name = "Private-Token"
                value = gitLabPrivateToken
            }
            /*credentials(HttpHeaderCredentials) {
                name = 'Job-Token'
                value = System.getenv("CI_JOB_TOKEN")
            }*/
            authentication {
                header(HttpHeaderAuthentication)
            }
        }
    }
}